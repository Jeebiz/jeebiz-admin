<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.hiwepy.admin.authz.org.dao.StaffMapper">

	<resultMap id="StaffMap" type="StaffEntity">
		<id property="id" column="staff_id" />
		<result property="orgId" column="org_id" />
		<result property="orgName" column="org_name" />
		<result property="deptId" column="dept_id" />
		<result property="deptName" column="dept_name" />
		<result property="teamId" column="team_id" />
		<result property="teamName" column="team_name" />
		<result property="postId" column="post_id" />
		<result property="postName" column="post_name" />
		<result property="intro" column="staff_intro" />
		<result property="status" column="staff_status" />
		<result property="createTime" column="create_time" />
		<result property="nickname" column="nickname" />
		<result property="avatar" column="u_avatar" />
		<result property="phone" column="u_phone" />
		<result property="email" column="u_email" />
	</resultMap>

	<update id="setStatus" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_authz_org_staff t
		   SET staff_status = #{status}
		 WHERE staff_id = #{id}
	</update>

	<select id="getCountByUid" resultType="java.lang.Long" parameterType="java.lang.String" useCache="false">
		SELECT count(t.staff_id) FROM sys_authz_org_staff t WHERE t.staff_id = #{uid}
	</select>

	<select id="getPagedList" resultMap="StaffMap" parameterType="StaffEntity" useCache="false">
		SELECT
			t.org_id,
			(select x.org_name from sys_authz_org_list x where x.org_id = t.org_id) as org_name,
			t.dept_id,
			(select x.dept_name from sys_authz_org_dept x where x.dept_id = t.dept_id) as dept_name,
			t.post_id,
			(select x.post_name from sys_authz_org_post x where x.dept_id = t.dept_id AND x.post_id = t.post_id) as post_name,
			t.team_id,
			(select x.team_name from sys_authz_org_team x where x.dept_id = t.dept_id AND x.team_id = t.team_id) as team_name,
			t.staff_id,
			t.staff_intro,
			t.staff_status,
			t.create_time,
			t2.nickname,
			t2.u_avatar,
			t2.u_phone,
			t2.u_email
		FROM sys_authz_org_staff t inner join sys_authz_user_profile t2 on t2.u_id = t.staff_id
		<where>
			<if test="model.orgId != null and model.orgId != ''">
				and t.org_id = #{model.orgId}
			</if>
			<if test="model.deptId != null and model.deptId != ''">
				and t.dept_id = #{model.deptId}
			</if>
			<if test="model.teamId != null and model.teamId != ''">
				and t.team_id = #{model.teamId}
			</if>
			<if test="model.postId != null and model.postId != ''">
				and t.post_id = #{model.postId}
			</if>
			<if test="model.postName != null and model.postName != ''">
				and t.post_name like CONCAT('%',#{postName},'%')
			</if>
			<if test="model.nickname != null and model.nickname != ''">
				and t2.nickname like CONCAT('%',#{model.nickname},'%')
			</if>
		</where>
		ORDER By t.staff_id DESC
	</select>

	<select id="getModel" resultMap="StaffMap" parameterType="java.lang.String" useCache="true">
		SELECT
			t.org_id,
			(select x.org_name from sys_authz_org_list x where x.org_id = t.org_id) as org_name,
			t.dept_id,
			(select x.dept_name from sys_authz_org_dept x where x.dept_id = t.dept_id) as dept_name,
			t.post_id,
			(select x.post_name from sys_authz_org_post x where x.dept_id = t.dept_id AND x.post_id = t.post_id) as post_name,
			t.team_id,
			(select x.team_name from sys_authz_org_team x where x.dept_id = t.dept_id AND x.team_id = t.team_id) as team_name,
			t.staff_id,
			t.staff_intro,
			t.staff_status,
			t.create_time,
			t2.nickname,
			t2.u_avatar,
			t2.u_phone,
			t2.u_email
		FROM sys_authz_org_staff t inner join sys_authz_user_profile t2 on t2.u_id = t.staff_id
	   WHERE t.staff_id = #{id}
	</select>

</mapper>
