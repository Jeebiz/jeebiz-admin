<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jeebiz.admin.extras.dict.dao.IKeyValueDao" >
	
	<resultMap id="KeyValueMap" type="KeyValueModel">
		<result property="id" column="d_id" />
		<result property="gkey" column="d_group_KEY" />
		<result property="gtext" column="d_group_TEXT" />
		<result property="label" column="d_label" />
		<result property="key" column="d_key" />
		<result property="value" column="d_value" />
		<result property="text" column="d_text" />
		<result property="status" column="d_status" />
		<result property="orderBy" column="d_order" />
	</resultMap>
	
	<resultMap id="PairMap" type="PairModel">
		<result property="key" column="d_key" />
		<result property="value" column="d_value" />
	</resultMap>
	
	<update id="setStatus" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_data_pairvalue t
		   SET d_status = #{status}
		 WHERE d_id = #{id}
	</update>
    
	<select id="getPagedList" resultMap="KeyValueMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.d_id,
			t.d_group as d_group_KEY,
			(SELECT x.g_text FROM sys_data_pairgroup x WHERE x.g_key = t.d_group) as d_group_TEXT,
			t.d_label,
			t.d_key,
			t.d_value,
			t.d_text,
			t.d_status,
			t.d_order
		FROM sys_data_pairvalue t
		<where>
			<if test="model.gkey != null and model.gkey != ''">
				and t.d_group = #{model.gkey}
			</if>
		</where>
		ORDER By t.d_group,t.d_order ASC
	</select>
	
	<select id="getModel" resultMap="KeyValueMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.d_id,
			t.d_group as d_group_KEY,
			(SELECT x.g_text FROM sys_data_pairgroup x WHERE x.g_key = t.d_group) as d_group_TEXT,
			t.d_label,
			t.d_key,
			t.d_value,
			t.d_text,
			t.d_status,
			t.d_order
		FROM sys_data_pairvalue t
		WHERE t.d_id = #{id}
	</select>
	
	<select id="getModelList" resultMap="KeyValueMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.d_id,
			t.d_group as d_group_KEY,
			(SELECT x.g_text FROM sys_data_pairgroup x WHERE x.g_key = t.d_group) as d_group,
			t.d_label,
			t.d_key,
			t.d_value,
			t.d_text,
			t.d_status,
			t.d_order
		FROM sys_data_pairvalue t
		WHERE t.d_group = #{gkey}
		ORDER By t.d_group,t.d_order ASC
	</select>
	
	<select id="getKeyValueList" resultMap="KeyValueMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.d_id,
			t.d_group as d_group_KEY,
			t.d_label,
			t.d_key,
			t.d_value,
			t.d_text,
			t.d_status,
			t.d_order
		FROM sys_data_pairvalue t
		<where>
			<if test="gkeys != null">
			<foreach collection="gkeys" index="index" item="item" open="  (" separator=" OR " close=")">  
	          t.d_group = #{item}
	        </foreach>
		    </if>
        </where>
		ORDER By t.d_group,t.d_order ASC
	</select>
	
	<select id="getGroupList" resultType="java.lang.String" useCache="false">
		 SELECT DISTINCT t.d_group
		   FROM sys_data_pairvalue t
		    WHERE t.d_id IN
		<foreach collection="gkeys" index="index" item="item" open="(" separator="," close=")">  
           #{item} 
        </foreach>
	</select>
	
	<select id="getPairValues" resultMap="PairMap" parameterType="java.lang.String" useCache="false">
		   SELECT t.d_key,t.d_value
			 FROM sys_data_pairvalue t
			WHERE t.d_group = #{key}
			  AND t.d_status = 1
		 ORDER By t.d_order ASC
	</select>
	
	<select id="getValue" resultType="java.lang.String" parameterType="java.lang.String" useCache="false">
		 SELECT t.d_group FROM sys_data_pairvalue t  WHERE t.d_id = #{key}
	</select>
	
	<select id="getCount" parameterType="KeyValueModel" resultType="java.lang.Integer" useCache="false">
		SELECT COUNT(1)  
		  FROM sys_data_pairvalue t
		 WHERE t.d_group = #{gkey}
		   AND t.d_key = #{key}
		   <if test="id != null and id != ''">
			AND t.d_id != #{id}
		   </if>
		  LIMIT 1
	</select>
		
</mapper>