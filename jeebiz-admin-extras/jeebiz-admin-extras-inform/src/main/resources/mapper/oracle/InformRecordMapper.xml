<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jeebiz.admin.extras.inform.dao.InformRecordMapper" >

	<resultMap id="InformRecordMap" type="InformRecordModel">
		<!-- 消息通知记录id -->
		<id property="id" column="r_id" />
		<!-- 消息通知发送人id -->
		<result property="uid" column="r_uid" />
		<!-- 消息通知发送人 -->
		<result property="uname" column="r_uname" />
		<!-- 消息通知的发送提供者 -->
		<result property="provider" column="r_provider" />
		<!-- 消息通知标签（自定义的通知标签，用于判断逻辑，如：1：信息通知、2：发起审批、3：审批通过、4：审批拒绝） -->
		<result property="tag" column="r_tag" />
		<!-- 消息通知接收人id -->
		<result property="toUid" column="r_to" />
		<!-- 消息通知接收人 -->
		<result property="toUname" column="r_to_uname" />
		<!-- 消息通知标题（变量处理后的标题） -->
		<result property="title" column="r_title" />
		<!-- 消息通知内容（变量处理后的内容） -->
		<result property="content" column="r_content" />
		<!-- 消息通知模板id（系统内信息模板、微信订阅消息等模板id） -->
		<result property="tid" column="r_tid" />
		<!-- 通知信息关联数据载体,JOSN格式的数据 -->
		<result property="payload" column="r_payload" />
		<!-- 消息通知阅读状态：（0:未阅读、1:已阅读） -->
		<result property="status" column="r_status" />
		<!-- 消息通知创建时间 -->
		<result property="createTime" column="create_time"/>
	</resultMap>

	<resultMap id="InformStatsMap" type="net.jeebiz.admin.extras.inform.web.dto.InformRecordStatsDTO">
		<!-- 消息通知的发送提供者 -->
		<result property="provider" column="r_provider" />
		<!-- 该类型通知总数 -->
		<result property="total" column="r_total" />
		<!-- 该类型未读通知总数 -->
		<result property="unread" column="r_unread" />
	</resultMap>

	<insert id="insert" parameterType="InformRecordModel">
		insert into sys_inform_records(r_uid,r_provider,r_tag,r_to,r_title,r_content,r_tid,r_payload,r_status)
		values(#{uid},#{provider},#{tag,jdbcType=VARCHAR},#{toUid},#{title},#{content,jdbcType=VARCHAR},#{tid,jdbcType=VARCHAR},#{payload,jdbcType=VARCHAR},0)
	</insert>

	<delete id="deleteByTid">
		delete from sys_inform_records where r_tid = #{tid}
	</delete>

	<delete id="deleteByUid">
		delete from sys_inform_records where r_to = #{toUid}
		<if test="ids != null">
		<foreach collection="ids" item="id" open=" AND (" separator=" OR " close=")" >
			r_id = #{id}
		</foreach>
		</if>
	</delete>

	<update id="update" parameterType="InformRecordModel">
		UPDATE sys_inform_records t
		   SET t.r_status = #{status}
		 WHERE t.r_to = #{toUid}
		 <if test="ids != null">
			 <foreach collection="ids" item="item" open=" AND (" separator=" OR " close=")" >
				t.r_id = #{item}
			 </foreach>
		 </if>
	</update>

	<select id="getCount" resultType="java.lang.Long" parameterType="InformRecordModel">
		SELECT NVL(COUNT(t.r_id), 0) COUNT
		FROM sys_inform_records t
		WHERE t.r_to = #{toUid}
		  AND t.r_status = 0
	</select>

	<select id="getPagedList" resultMap="InformRecordMap" >
		SELECT t.r_id,
			   t.r_uid,
			   (SELECT x.u_nickname FROM sys_authz_user_profile x WHERE x.u_id = t.r_uid) as r_uname,
		   	   t.r_provider,
		   	   t.r_tag,
			   t.r_title,
			   t.r_content,
			   t.r_tid,
			   t.r_to,
			   (SELECT x.u_nickname FROM sys_authz_user_profile x WHERE x.u_id = t.r_to) as r_to_uname,
			   t.r_payload,
			   t.r_status,
			   t.time24
		  FROM sys_inform_records t
	   <where>
		   <if test="model.toUid != null and model.toUid != '' ">
				AND t.r_to = #{model.toUid}
			</if>
			<if test="model.provider != null and model.provider != '' ">
				AND t.t_provider = #{model.provider}
			</if>
			<if test="model.status != null and model.status != '' ">
				AND t.r_status = #{model.status}
			</if>
			<if test="model.keywords != null and model.keywords != '' ">
				AND t.r_title like '%'|| #{model.keywords} ||'%'
			</if>
	   </where>
		ORDER BY t.time24 DESC
	</select>

	<select id="getModel" resultMap="InformRecordMap" parameterType="String" >
		SELECT t.r_id,
			   t.r_uid,
			   (SELECT x.u_nickname FROM sys_authz_user_profile x WHERE x.u_id = t.r_uid) as r_uname,
		   	   t.r_provider,
		   	   t.r_tag,
			   t.r_title,
			   t.r_content,
			   t.r_tid,
			   t.r_to,
			   (SELECT x.u_nickname FROM sys_authz_user_profile x WHERE x.u_id = t.r_to) as r_to_uname,
			   t.r_payload,
			   t.r_status,
			   t.time24
		  FROM sys_inform_records t
	     WHERE t.r_id = #{id}
	</select>

	<select id="getStats" resultMap="InformRecordStatsMap">
		SELECT t.r_provider,
			   COUNT( t.r_id ) as r_total,
		   	   SUM( CASE WHEN t.r_status = '0' THEN 1 ELSE 0 END ) as r_unread
		FROM sys_inform_records t
	   WHERE t.r_to = #{toUid}
	   GROUP BY t.r_provider
	</select>

</mapper>
