<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.jeebiz.admin.extras.article.dao.ArticleCommentMapper">

    <resultMap id="ArticleCommentMap" type="ArticleCommentEntity">
        <!-- 文章评论id -->
		<result property="id" column="c_id" />
		<!-- 文章id -->
		<result property="cid" column="c_cid" />
		<!-- 上级文章评论id -->
		<result property="pid" column="c_pid" />
		<!-- 文章评论者id -->
		<result property="uid" column="c_uid" />
		<!-- 文章评论者姓名 -->
		<result property="uname" column="c_uname" />
		<!-- 文章评论类型 -->
		<result property="type" column="C_TYPE" />
		<!-- 文章评论内容 -->
		<result property="text" column="C_TEXT" />
		<!-- 文章评论审核状态（0:未通过|1:通过） -->
		<result property="review" column="c_review" />
		<!-- 文章评论状态（0:删除|1:正常） -->
		<result property="status" column="c_status" />
		<!-- 文章评论推荐（0:未推荐|1:推荐） -->
		<result property="recommend" column="c_recommend" />
		<!-- 文章评论排序 -->
		<result property="order" column="c_order" />
		<!-- 文章评论时间 -->
		<result property="time24" column="c_time24" />
    </resultMap>

	<insert id="insert" parameterType="ArticleCommentEntity" flushCache="true">
		INSERT INTO sys_article_content_comments(c_cid,c_pid,c_uid,C_TYPE,C_TEXT,c_review,c_status,c_recommend,c_order)
		VALUES (#{cid},#{pid,jdbcType=VARCHAR},#{uid},#{type},#{text,jdbcType=VARCHAR},0,1,0,IFNULL((SELECT MAX(x.c_order) FROM sys_article_content_comments x WHERE x.c_id = #{cid}),0))
	</insert>

	<delete id="batchDelete" flushCache="true">
		DELETE FROM sys_article_content_comments WHERE c_id IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
           #{item}
        </foreach>
	</delete>

	<update id="setStatus" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_article_content_comments t
		   SET d_status = #{status}
		 WHERE c_id = #{id}
	</update>

	<update id="setRecommend" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_article_content_comments t
		   SET c_recommend = #{recommend}
		 WHERE c_id = #{id}
	</update>

	<update id="setReview" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_article_content_comments t
		   SET c_review = #{review}
		 WHERE c_id = #{id}
	</update>

	<update id="update" parameterType="ArticleCommentEntity" flushCache="true">
		UPDATE sys_article_content_comments t
		   SET C_TEXT = #{text},
		   	   c_time24 = to_char(sysdate ,'yyyy-mm-dd hh24:mi:ss')
		 WHERE c_id = #{id}
	</update>

	<select id="getPagedList" resultMap="ArticleCommentMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_cid,
			t.c_pid,
			t.c_uid,
			(SELECT IFNULL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_TYPE,
			t.C_TEXT,
			t.c_review,
			t.c_status,
			t.c_recommend,
			t.c_order,
			t.c_time24
		FROM sys_article_content_comments t
		<where>
			<if test="model.cid != null and model.cid != ''">
				and t.c_cid = #{model.cid}
			</if>
		</where>
	</select>

	<select id="getModel" resultMap="ArticleCommentMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_cid,
			t.c_pid,
			t.c_uid,
		    (SELECT IFNULL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_TYPE,
			t.C_TEXT,
			t.c_review,
			t.c_status,
			t.c_recommend,
			t.c_order,
			t.c_time24
	   FROM sys_article_content_comments t
	  WHERE t.c_id = #{id}
	</select>

	<select id="getRowList" resultMap="ArticleCommentMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_cid,
			t.c_pid,
			t.c_uid,
			(SELECT IFNULL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_TYPE,
			t.C_TEXT,
			t.c_review,
			t.c_status,
			t.c_recommend,
			t.c_order,
			t.c_time24
	   FROM sys_article_content_comments t
	  WHERE t.c_status != 0
	    AND t.c_uid = #{uid}
	</select>

	<select id="getTreeList" resultMap="ArticleCommentMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_cid,
			t.c_pid,
			t.c_uid,
			(SELECT IFNULL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_TYPE,
			t.C_TEXT,
			t.c_review,
			t.c_status,
			t.c_recommend,
			t.c_order,
			t.c_time24
	   FROM sys_article_content_comments t
	  WHERE t.c_status != 0
	    AND t.c_uid = #{uid}
	  START WITH t.c_pid = 0 CONNECT BY t.c_pid = PRIOR t.c_id
	</select>

</mapper>
