<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.jeebiz.admin.extras.article.dao.IArticleCategoryDao">

    <resultMap id="ArticleCategoryMap" type="ArticleCategoryModel">
        <!-- 文章分类id -->
		<result property="id" column="c_id" />
		<!-- 文章分类创建者id -->
		<result property="uid" column="c_uid" />
		<!-- 文章分类创建者姓名 -->
		<result property="uname" column="c_uname" />
		<!-- 文章分类名称 -->
		<result property="name" column="C_name" />
		<!-- 文章分类等级 -->
		<result property="grade" column="C_GRADE" />
		<!-- 文章分类简介 -->
		<result property="intro" column="C_INTRO" />
		<!-- 文章分类关键字 -->
		<result property="keywords" column="C_KEYWORDS" />
		<!-- 文章分类排序 -->
		<result property="order" column="c_order" />
		<!-- 文章分类状态（0:禁用|1:可用） -->
		<result property="status" column="c_status" />
		<!--文章分类创建时间 -->
		<result property="time24" column="c_time24" />
    </resultMap>
    
    <resultMap id="PairMap" type="PairModel">
        <result property="key" column="c_id"/>
        <result property="value" column="C_name"/>
    </resultMap>

	<insert id="insert" parameterType="ArticleCategoryModel" flushCache="true">
		INSERT INTO sys_article_category(c_uid,C_name,C_GRADE,C_INTRO,C_KEYWORDS,c_order,c_status)
		VALUES (#{uid},#{name},#{grade},#{intro,jdbcType=VARCHAR},#{keywords,jdbcType=VARCHAR},#{order},1)
	</insert>
	
	<delete id="batchDelete" flushCache="true">
		DELETE FROM sys_article_category WHERE c_id IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
           #{item} 
        </foreach>
	</delete>
	
	<update id="setStatus" parameterType="java.lang.String" flushCache="true">
		UPDATE sys_article_category t
		   SET c_status = #{status}
		 WHERE c_id = #{id}
	</update>
	
	<update id="update" parameterType="ArticleCategoryModel" flushCache="true">
		UPDATE sys_article_category t
		   SET C_name = #{name},
		   	   C_GRADE = #{grade},
		   	   C_INTRO = #{intro},
		   	   C_KEYWORDS = #{keywords},
		       c_order = #{order}
		 WHERE c_id = #{id}
	</update>
	
	<select id="getCountByName" resultType="int" parameterType="java.lang.String" useCache="false">
		SELECT count(t.c_id)
		  FROM sys_article_category t
		 WHERE t.C_name = #{name}
		<if test="origin != null and origin != ''">
			AND t.c_id != #{origin}
		 </if>
	</select>
	
	<select id="getPagedList" resultMap="ArticleCategoryMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_uid,
			(SELECT NVL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_name,
			t.C_GRADE,
			t.C_INTRO,
			t.C_KEYWORDS,
			t.c_status,
			t.c_order,
			t.c_time24
		FROM sys_article_category t
		<where>
			<if test="model.status != null and model.status != ''">
				and t.c_status = #{model.status}
			</if>
		</where>
		ORDER By t.c_order ASC
	</select>
	
	<select id="getPairList" resultMap="PairMap" parameterType="java.lang.String" useCache="false">
	  SELECT t.c_id,
	         t.C_name
		FROM sys_article_category t
	   WHERE t.c_status != 0
	   ORDER BY t.c_order ASC
	</select>
	
	<select id="getModel" resultMap="ArticleCategoryMap" parameterType="java.lang.String" useCache="false">
		SELECT
			t.c_id,
			t.c_uid,
			(SELECT NVL(x.u_alias, x.u_username) from sys_authz_user_list x where x.u_id = t.c_uid) as c_uname,
			t.C_name,
			t.C_GRADE,
			t.C_INTRO,
			t.C_KEYWORDS,
			t.c_status,
			t.c_order,
			t.c_time24
		FROM sys_article_category t
	   WHERE t.c_id = #{id}
	</select>

</mapper>
