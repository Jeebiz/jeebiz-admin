<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jeebiz.admin.extras.authz.org.dao.IAuthzDepartmentDao">

	<!-- 开启二级缓存 -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache">
		<!-- 缓存对象闲置时长：3600s = 1h -->
		<property name="timeToIdleSeconds" value="3600"/>
		<!-- 缓存对象有效时长：3600s = 1h -->
		<property name="timeToLiveSeconds" value="3600"/>
		<!-- 同ehcache参数maxElementsInMemory -->
		<property name="maxEntriesLocalHeap" value="1000"/>
		<!-- 同ehcache参数maxElementsOnDisk -->
		<property name="maxEntriesLocalDisk" value="10000000"/>
		<!-- 缓存对象驱逐政策: "LRU", "LFU" or "FIFO" -->
		<property name="memoryStoreEvictionPolicy" value="LRU"/>
	</cache>

	<resultMap id="AuthzDepartmentMap" type="AuthzDepartmentModel">
		<id property="id" column="DEPT_ID"/>
		<result property="orgId" column="ORG_ID"/>
		<result property="orgName" column="ORG_NAME"/>
		<result property="code" column="DEPT_CODE"/>
		<result property="name" column="DEPT_NAME"/>
		<result property="intro" column="DEPT_INTRO"/>
		<result property="parent" column="DEPT_PARENT"/>
		<result property="userId" column="DEPT_USERID"/>
		<result property="status" column="DEPT_STATUS"/>
		<result property="time24" column="TIME24"/>
	</resultMap>

	<resultMap id="PairMap" type="PairModel">
		<result property="key" column="DEPT_ID"/>
		<result property="value" column="DEPT_NAME"/>
	</resultMap>

	<insert id="insert" parameterType="AuthzDepartmentModel" flushCache="true">
		insert into SYS_AUTHZ_ORG_DEPT(ORG_ID,DEPT_CODE,DEPT_NAME,DEPT_INTRO,DEPT_PARENT,DEPT_STATUS,DEPT_USERID)
		values(#{orgId},#{code},#{name},#{intro,jdbcType=VARCHAR},#{parent,jdbcType=VARCHAR},'1',#{userId})
	</insert>

	<delete id="delete" parameterType="java.lang.String" flushCache="true">
		DELETE FROM SYS_AUTHZ_ORG_DEPT WHERE DEPT_ID = #{id}
	</delete>

	<delete id="batchDelete" flushCache="true">
		DELETE FROM SYS_AUTHZ_ORG_DEPT WHERE DEPT_ID IN
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<update id="setStatus" parameterType="java.lang.String" flushCache="true">
		UPDATE SYS_AUTHZ_ORG_DEPT t
		   SET DEPT_STATUS = #{status}
		 WHERE DEPT_ID = #{id}
	</update>

	<update id="update" parameterType="AuthzDepartmentModel" flushCache="true">
		update SYS_AUTHZ_ORG_DEPT t
		<set>
			<if test="code != null and code != ''">t.DEPT_CODE = #{code},</if>
			<if test="name != null and name != ''">t.DEPT_NAME = #{name},</if>
			<if test="intro != null and intro != ''">t.DEPT_INTRO = #{intro},</if>
			<if test="status != null and status != ''">t.DEPT_STATUS = #{status}</if>
		</set>
		where t.DEPT_ID = #{id}
	</update>
	
	<select id="getCountByParent" resultType="int" parameterType="java.lang.String" useCache="false">
		SELECT count(t.DEPT_ID) 
		  FROM SYS_AUTHZ_ORG_DEPT t 
		 WHERE t.DEPT_PARENT = #{parent}
	</select>
	
	<select id="getStaffCount" resultType="int" parameterType="java.lang.String" useCache="false">
		SELECT count(t.STAFF_ID) 
		  FROM SYS_AUTHZ_ORG_STAFF t 
		 WHERE t.DEPT_ID = #{id}
	</select>
	
	<select id="getDeptCountByCode" resultType="int" parameterType="java.lang.String" useCache="false">
		SELECT count(t.DEPT_ID) 
		  FROM SYS_AUTHZ_ORG_DEPT t 
		 WHERE t.DEPT_CODE = #{code}
		   AND t.ORG_ID = #{orgId}
		<if test="deptId != null and deptId != ''">
			AND t.DEPT_ID != #{deptId}
		 </if>
	</select>
	
	<select id="getDeptCountByName" resultType="int" parameterType="java.lang.String" useCache="false">
		SELECT count(t.DEPT_ID) 
		  FROM SYS_AUTHZ_ORG_DEPT t 
		 WHERE t.DEPT_NAME = #{name}
		   AND t.ORG_ID = #{orgId}
		 <if test="deptId != null and deptId != ''">
			AND t.DEPT_ID != #{deptId}
		 </if>
	</select>

	<select id="getPagedList" resultMap="AuthzDepartmentMap" parameterType="AuthzDepartmentModel" useCache="false">
		SELECT
		t.ORG_ID,
		(select x.ORG_NAME from SYS_AUTHZ_ORG_LIST x where x.ORG_ID = t.ORG_ID) as ORG_NAME,
		t.DEPT_ID,
		t.DEPT_CODE,
		t.DEPT_NAME,
		t.DEPT_INTRO,
		t.DEPT_PARENT,
		t.DEPT_USERID,
		t.DEPT_STATUS,
		t.TIME24
		FROM SYS_AUTHZ_ORG_DEPT t
		<where>
			<if test="model.orgId != null and model.orgId != ''">
				and t.ORG_ID = #{model.orgId}
			</if>
			<if test="model.name != null and model.name != ''">
				and t.DEPT_NAME like '%'||#{model.name}||'%'
			</if>
		</where>
		ORDER By t.TIME24 ASC
	</select>

	<select id="getModel" resultMap="AuthzDepartmentMap" parameterType="java.lang.String" useCache="true">
		SELECT
			t.ORG_ID,
			(select x.ORG_NAME from SYS_AUTHZ_ORG_LIST x where x.ORG_ID = t.ORG_ID) as ORG_NAME,
			t.DEPT_ID,
			t.DEPT_CODE,
			t.DEPT_NAME,
			t.DEPT_INTRO,
			t.DEPT_PARENT,
			t.DEPT_USERID,
			t.DEPT_STATUS,
			t.TIME24
		FROM SYS_AUTHZ_ORG_DEPT t
	   WHERE t.DEPT_ID = #{id}
	</select>

	<select id="getPairValues" resultMap="PairMap" parameterType="java.lang.String" useCache="true">
	   SELECT t.DEPT_ID,t.DEPT_NAME
		 FROM SYS_AUTHZ_ORG_DEPT t
		WHERE t.DEPT_STATUS = 1
		  AND t.ORG_ID = #{key}
	</select>

</mapper>