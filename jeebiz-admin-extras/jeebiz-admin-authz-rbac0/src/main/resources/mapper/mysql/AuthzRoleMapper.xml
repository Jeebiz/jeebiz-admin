<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.hiwepy.admin.authz.rbac0.dao.AuthzRoleMapper">

	<resultMap id="RoleMap" type="AuthzRoleEntity">
		<!-- 角色id -->
		<result property="id" column="id" />
		<!-- 角色编码 -->
		<result property="key" column="`key`" />
		<!-- 角色名称 -->
		<result property="name" column="`name`" />
		<!-- 角色类型（1:原生|2:继承|3:复制|4:自定义） -->
		<result property="type" column="type" />
		<!-- 角色简介 -->
		<result property="intro" column="intro" />
		<!-- 角色状态（0:禁用|1:可用） -->
		<result property="status" column="`status`" />
		<!-- 角色已分配用户量 -->
		<result property="users" column="users" />
		<!-- 角色创建时间 -->
		<result property="createTime" column="create_time"/>
		<!-- 角色授权的标记集合：将 perms list属性映射到collection : http://jaychang.iteye.com/blog/2357143 -->
        <collection property="perms" column="id" select="getPermsByRoleId">
            <result column="perm" />
        </collection>
	</resultMap>

	<resultMap id="UserMap" type="AuthzUserEntity">
		<!-- 账号id -->
		<result property="id" column="id" />
		<!-- 账号名称 -->
		<result property="username" column="username"/>
		<!-- 账号密码 -->
		<result property="password" column="password"/>
		<!-- 登录方式（如：password：账号密码、weixin:微信登录...） -->
		<result property="type" column="type"/>
		<!-- 账号密码盐：用于密码加解密 -->
		<result property="salt" column="salt"/>
		<!-- 账号秘钥：用于用户JWT加解密 -->
		<result property="secret" column="secret"/>
		<!-- 账号客户端应用id -->
		<result property="appId" column="app_id"/>
		<!-- 账号客户端应用渠道编码  -->
		<result property="appChannel" column="app_channel" />
		<!-- 账号客户端版本 -->
		<result property="appVer" column="app_version"/>
		<!-- 账号关联用户id -->
		<result property="userId" column="user_id" />
		<!-- 账号关联用户code（短号/工号） -->
		<result property="userCode" column="user_code" />
		<!-- 账号是否在线（1：是，0：否） -->
		<result property="online" column="is_online"/>
		<!-- 账号最近一次登录时间 -->
		<result property="onlineLatest" column="latest_online" />
		<!-- 账号状态(0:不可用|1:正常|2:锁定) -->
		<result property="status" column="`status`"/>
		<!-- 账号注册时间 -->
		<result property="createTime" column="create_time"/>
        <!-- 角色id（可能多个组合，如：1,2） -->
		<result property="roleId" column="role_id" />
		<!-- 角色名称（可能多个组合，如：角色1,角色2） -->
		<result property="roleName" column="role_name" />
	</resultMap>

	<resultMap id="PairMap" type="PairModel">
		<result property="key" column="id" />
		<result property="value" column="`name`" />
	</resultMap>

	<select id="getCountByName" resultType="java.lang.Long" parameterType="java.lang.String" useCache="true">
		SELECT count(t.id)
		  FROM sys_authz_role_list t
		 WHERE t.`name` = #{name}
		 <if test="origin != null and origin != ''">
		   AND t.id != #{origin}
		 </if>
	</select>

	<select id="getCountByUid" resultType="java.lang.Long" parameterType="java.lang.String">
		SELECT count(t.id) FROM sys_authz_user_roles t WHERE t.user_id = #{uid}
	</select>

	<select id="getRoles" resultMap="RoleMap" useCache="true">
		SELECT
			t.id,
			t.`key`,
			t.`name`,
			t.type,
			t.intro,
			t.`status`,
			t.create_time
		FROM sys_authz_role_list t
	</select>

	<select id="getUserRoles" resultMap="RoleMap" useCache="false">
		SELECT
			t.id,
			t.`key`,
			t.`name`,
			t.type,
			t.intro,
			t.`status`,
			t.create_time
		FROM sys_authz_role_list t INNER JOIN sys_authz_user_roles x ON t.id = x.role_id
		WHERE x.user_id = #{userId}
	</select>

	<select id="getPermsByRoleId" resultType="string" useCache="true">
        SELECT x.perms FROM sys_authz_role_perms x WHERE x.role_id = #{id}
    </select>

	<select id="getModel" resultMap="RoleMap" parameterType="java.lang.String" useCache="true">
		SELECT
			t.id,
			t.`key`,
			t.`name`,
			t.type,
			t.intro,
			t.`status`,
			(SELECT COUNT(x.id) FROM sys_authz_user_roles x WHERE x.role_id = t.id) as r_users,
			t.create_time
		FROM sys_authz_role_list t
	   WHERE t.id = #{id}
	</select>

	<select id="getPagedList" resultMap="RoleMap" parameterType="AuthzRoleEntity" useCache="false">
		SELECT
			t.id,
			t.`key`,
			t.`name`,
			t.type,
			t.intro,
			t.`status`,
			(SELECT COUNT(x.id) FROM sys_authz_user_roles x WHERE x.role_id = t.id) as r_users,
			t.create_time
		FROM sys_authz_role_list t
	   WHERE t.r_key != 'admin'
		<if test="model.status != null and model.status != ''">
			and t.`status` = #{model.status}
		</if>
		<if test="model.type != null and model.type != ''">
			and t.type = #{model.type}
		</if>
		<if test="model.keywords != null and model.keywords != ''">
			and t.`name` like CONCAT('%',#{model.keywords},'%')
		</if>
	</select>

	<insert id="setUsers" flushCache="true">
    	insert into sys_authz_user_roles(role_id,user_id)
    	values <foreach collection="userIds" item="item" separator =",">
		(#{roleId},#{item})
        </foreach>
    </insert>

    <insert id="setUsersByKey" flushCache="true">
    	insert into sys_authz_user_roles(role_id,user_id)
    	values <foreach collection="userIds" item="item" separator =",">
		((SELECT x.id FROM sys_authz_role_list x WHERE x.`key` = #{roleKey}),#{item})
        </foreach>
    </insert>

	<select id="getPagedAllocatedList" resultMap="UserMap" parameterType="AuthzRoleEntity" useCache="false">
		SELECT
			t.`id`,
			t2.nickname,
			t2.avatar,
			t.`status`,
			t.create_time
		FROM sys_authz_user_account t
		     INNER JOIN sys_authz_user_profile t2 ON t.user_id = t2.id
			 INNER JOIN sys_authz_user_roles x ON t.user_id = x.user_id
		WHERE x.role_id = #{model.id}
		<if test="model.status != null and model.status != ''">
			and t.`status` = #{model.status}
		</if>
		<if test="model.keywords != null and model.keywords != ''">
			and t.user_code like CONCAT('%',#{model.keywords},'%')
		</if>
	</select>

	<select id="getPagedUnAllocatedList" resultMap="UserMap" parameterType="AuthzRoleEntity" useCache="false">
		SELECT
			t.`id`,
			t2.nickname,
			t2.avatar,
			t.`status`,
			t.create_time
		FROM sys_authz_user_account t
			 INNER JOIN sys_authz_user_profile t2 ON t.user_id = t2.id
		WHERE NOT EXISTS ( SELECT '1' FROM sys_authz_user_roles z WHERE t.user_id = z.user_id and z.role_id = #{id} )
		<if test="model.status != null and model.status != ''">
			and t.`status` = #{model.status}
		</if>
		<if test="model.keywords != null and model.keywords != ''">
			and t.user_code like CONCAT('%',#{model.keywords},'%')
		</if>
	</select>

	<select id="getPairList" resultMap="PairMap" parameterType="java.lang.String" useCache="false">
		 SELECT t.`id`,
				t.`name`
		   FROM sys_authz_role_list t
	      WHERE t.`status` = 1
	   ORDER BY t.create_time DESC
	</select>

</mapper>
