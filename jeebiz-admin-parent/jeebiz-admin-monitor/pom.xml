<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.jeebiz</groupId>
		<artifactId>jeebiz-admin-parent</artifactId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>jeebiz-admin-monitor</artifactId>
	
	<dependencies>
		<!-- 
			http://www.ityouknow.com/springboot/2018/02/06/spring-boot-actuator.html
			https://www.cnblogs.com/shihaiming/p/8488939.html
		 -->
		<!-- For Spring Boot Admin -->
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-server</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-server-ui</artifactId>
		</dependency>
		<!--JMX-bean 管理 -->
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
		<!-- For Log4j2 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<!-- <dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-mongodb3</artifactId>
		</dependency> -->
		<!-- For Mongodb (服务描述信息存储、日志信息存储)
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.spring4all</groupId>
		    <artifactId>mongodb-plus-spring-boot-starter</artifactId>
		</dependency> -->
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.springframework.boot</groupId>
		    		<artifactId>spring-boot-starter-tomcat</artifactId>
		    	</exclusion>
		    	<exclusion>
		    		<groupId>org.springframework.boot</groupId>
		    		<artifactId>spring-boot-starter-logging</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		<!-- For Embed Tomcat -->
		<!-- <dependency> 
			<groupId>org.springframework.boot</groupId> 
			<artifactId>spring-boot-starter-tomcat</artifactId> 
		</dependency> -->
		<!-- For Embed Jetty -->
		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency> -->
		<!-- For Embed Undertow -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <mainClass>net.jeebiz.admin.watcher.AdminServerApplication</mainClass>
                </configuration>
			</plugin>
			<!-- 第一步：生成可执行的启动脚本 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
			</plugin>
			<!-- 第一步：通过antrun插件拷贝文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- 第三步：生成离线文档 -->
			<!-- http://blog.didispace.com/swagger2markup-asciidoc/ -->
			<!-- First, use the swagger2markup plugin to generate asciidoc -->
			<!-- <plugin> <groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-maven-plugin</artifactId> 
				</plugin> -->
			<!-- Run the generated asciidoc through Asciidoctor to generate other 
				documentation types, such as PDFs or HTML5 -->
			<!-- <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId> 
				</plugin> -->
		</plugins>
	</build>
	
</project>