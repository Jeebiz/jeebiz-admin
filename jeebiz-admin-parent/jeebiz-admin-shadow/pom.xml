<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.jeebiz</groupId>
		<artifactId>jeebiz-admin-parent</artifactId>
		<version>1.0.1-ce-SNAPSHOT</version>
	</parent>
	<artifactId>jeebiz-admin-shadow</artifactId>
	
	<properties>

		<!-- Swagger UI JSON 数据访问地址 -->
		<swagger.input>http://localhost:8080/v2/api-docs</swagger.input>
		<!--appassembler -->
		<appassembler-app-name>jeebiz-admin</appassembler-app-name>
		
		<flyway.version>5.2.0</flyway.version>
		
	</properties>

	<dependencies>
		
		<!-- Jeebiz 初始化启动器 （必选）-->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-boot-autoconfigure</artifactId>
			<version>${jeebiz-boot.version}</version>
		</dependency>
		<!-- Jeebiz 组织机构管理（必选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-authz-org</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz Rbac权限管理：此次选择了比较简单的rbac0的实现（必选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-authz-rbac0</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz 基础数据（可选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-basedata</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz 编辑机：解决文件上传存储问题（可选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-editor</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz 消息通知（可选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-inform</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz 业务日志（可选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-logbiz</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- Jeebiz 回话管理（可选） -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>jeebiz-admin-extras-sessions</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<!-- For Embedded Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- For Thymeleaf View -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Thymeleaf Layout Dialect -->
		<dependency>
		    <groupId>nz.net.ultraq.thymeleaf</groupId>
		    <artifactId>thymeleaf-layout-dialect</artifactId>
		</dependency>
		<!-- Thymeleaf Shiro -->
		<dependency>
		    <groupId>com.github.theborakompanioni</groupId>
		    <artifactId>thymeleaf-extras-shiro</artifactId>
		</dependency>
		<!-- Webjars -->
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>webjars-locator</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.webjars</groupId>
		    <artifactId>layui</artifactId>
		</dependency>
		<!-- For Swagger -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>webmvc-swagger2-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.xiaoymin</groupId>
		    <artifactId>swagger-bootstrap-ui</artifactId>
		</dependency>
		<!-- For Validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-el</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>validation-mimetypes-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.jsoup</groupId>
		    <artifactId>jsoup</artifactId>
		</dependency>
		<!-- For Captcha -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>kaptcha-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Shiro -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-biz-spring-boot-starter</artifactId>
		</dependency>
		<!-- <dependency>
		    <groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
			<exclusions>
				<exclusion>
					<groupId>net.sf.ehcache</groupId>
					<artifactId>ehcache-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency> -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-j2cache</artifactId>
		</dependency>
		<!-- For Dozer -->
		<dependency>
			<groupId>com.github.dozermapper</groupId>
		    <artifactId>dozer-spring-boot-starter</artifactId>
		</dependency>
		<!-- For AOP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- For Cache Support -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-cache</artifactId>
	    </dependency>
		<!-- J2cache Multi-Level Cache
		<dependency>
			<groupId>net.oschina.j2cache</groupId>
			<artifactId>j2cache-spring-boot2-starter</artifactId>
		</dependency> -->
		<!-- 使用 JGroups 组播方式进行服务节点缓存同步（不支持在云主机中使用） -->
		<dependency>
			<groupId>org.jgroups</groupId>
			<artifactId>jgroups</artifactId>
		</dependency>
		<!-- 使用 Ehcache 2.x 作为二级缓存-->
		<dependency>
		    <groupId>net.sf.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		</dependency>
		<!-- 使用 Ehcache 3.x 作为二级缓存
		<dependency>
		    <groupId>org.ehcache</groupId>
		    <artifactId>ehcache</artifactId>
		</dependency> -->
		<!-- 使用 J2cache 作为 Spring-Cache 实现 
		<dependency>
		    <groupId>net.oschina.j2cache</groupId>
		    <artifactId>j2cache-springcache</artifactId>
		</dependency>-->
		<!-- 使用 J2cache 作为 Mybatis二级缓存
		<dependency>
		    <groupId>net.oschina.j2cache</groupId>
		    <artifactId>j2cache-mybatis</artifactId>
		</dependency> -->
		<!-- For Log4j2 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>log4j2-plus-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Mybatis -->
		<dependency>
		    <groupId>com.baomidou</groupId>
		    <artifactId>mybatis-plus-boot-starter</artifactId>
		    <exclusions>
		    	<exclusion>
		    		<groupId>org.freemarker</groupId>
		    		<artifactId>freemarker</artifactId>
		    	</exclusion>
		    </exclusions>
		</dependency>
		<!-- For Flyway -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>flyway-plus-spring-boot-starter</artifactId>
		</dependency>
		
		<!-- For Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>druid-plus-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Javamelody -->
		<dependency>
		    <groupId>net.bull.javamelody</groupId>
		    <artifactId>javamelody-spring-boot-starter</artifactId>
		</dependency>
		<!-- JDBC Driver For MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- JDBC Driver For Oracle -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc8</artifactId>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
	        <groupId>com.oracle.database.jdbc</groupId>
	        <artifactId>ojdbc8dms</artifactId>
	        <scope>runtime</scope>
	    </dependency>
		<dependency>
		    <groupId>com.oracle.database.nls</groupId>
		    <artifactId>orai18n</artifactId>
		    <scope>runtime</scope>
		</dependency>
			
		<!-- For Embed Tomcat -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency> -->
        <!-- For Embed Jetty -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency> -->
        <!-- For Embed Undertow -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<mainClass>net.jeebiz.admin.ui.layui.AdminLayuiApplication</mainClass>
				</configuration>
			</plugin>
			<!-- 第一步：生成可执行的启动脚本 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
			</plugin>
			<!-- 第一步：通过antrun插件拷贝文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- 第三步：生成离线文档 -->
			<!-- http://blog.didispace.com/swagger2markup-asciidoc/ -->
			<!-- First, use the swagger2markup plugin to generate asciidoc -->
			<!-- <plugin> <groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-maven-plugin</artifactId> 
				</plugin> -->
			<!-- Run the generated asciidoc through Asciidoctor to generate other 
				documentation types, such as PDFs or HTML5 -->
			<!-- <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId> 
				</plugin> -->
		</plugins>
	</build>
	
</project>