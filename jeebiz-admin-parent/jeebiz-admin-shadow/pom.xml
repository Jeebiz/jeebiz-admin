<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.jeebiz</groupId>
		<artifactId>jeebiz-admin-parent</artifactId>
		<version>1.0.2-ce-SNAPSHOT</version>
	</parent>
	<artifactId>jeebiz-admin-shadow</artifactId>

	<dependencies>

		<!-- For Jeebiz API -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-api</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 数据字典（必选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-dict</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 系统设置（必选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-settings</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 组织机构管理（必选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-authz-org</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz Rbac权限管理：此次选择了比较简单的rbac0的实现（必选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-authz-rbac0</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 第三方登录：提供接口实现openid等和账号的绑定 -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-authz-thirdparty</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-authz-dingtalk</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-authz-weixin</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 设备激活：记录客户端激活与账户对应关系（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-device</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 编辑器：富文本编辑器后台接口（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-editor</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 文件服务（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-filestore</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 消息通知（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-inform</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 通知公告（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-article</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 业务日志（可选）-->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-logbiz</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 回话管理（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-sessions</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>
		<!-- Jeebiz 服务监控（可选） -->
		<dependency>
			<groupId>net.jeebiz</groupId>
			<artifactId>jeebiz-admin-extras-monitor</artifactId>
			<version>${jeebiz-admin.version}</version>
		</dependency>

		<!-- For Shiro JWT -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-jwt-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>jwt-issuer-with-jjwt</artifactId>
		</dependency>
		<!-- For Thymeleaf View -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- For Swagger -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>webmvc-swagger2-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.github.xiaoymin</groupId>
		    <artifactId>swagger-bootstrap-ui</artifactId>
		</dependency>
		<!-- For Docx4j -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>docx4j-spring-boot-starter</artifactId>
		</dependency>

		<!-- For Shiro Weixin （微信公共号、小程序登录） -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-weixin-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>wx-java-mp-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.binarywang</groupId>
			<artifactId>wx-java-miniapp-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Shiro Dingtalk （钉钉） -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-dingtalk-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>dingtalk-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Shiro （扫码登录） -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-qrcode-spring-boot-starter</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>zxing-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Shiro Cas （Cas认证登录） -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-cas-spring-boot-starter</artifactId>
			<version>1.0.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.jasig.cas.client</groupId>
			<artifactId>cas-client-core</artifactId>
		</dependency>
		<!-- For PAC4J -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>shiro-pac4j-spring-boot-starter</artifactId>
		</dependency>
		<!-- PAC4J For CAS Protocol  -->
		<dependency>
			<groupId>org.pac4j</groupId>
			<artifactId>pac4j-cas</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
		</dependency>
		<!-- PAC4J For HTTP Protocol  -->
		<dependency>
			<groupId>org.pac4j</groupId>
			<artifactId>pac4j-http</artifactId>
		</dependency>
		<!-- PAC4J For OAuth Protocol  -->
		<dependency>
			<groupId>org.pac4j</groupId>
			<artifactId>pac4j-oauth</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.scribejava</groupId>
			<artifactId>scribejava-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.scribejava</groupId>
			<artifactId>scribejava-apis</artifactId>
		</dependency>
		<!-- For Google API -->
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.http-client</groupId>
			<artifactId>google-http-client-jackson2</artifactId>
		</dependency>
		<!-- For IP2region -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>ip2region-spring-boot-starter</artifactId>
		</dependency>

		<!-- For Okhttp 3.x -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>okhttp3-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Zxing -->
		<dependency>
            <groupId>com.github.hiwepy</groupId>
            <artifactId>zxing-spring-boot-starter</artifactId>
        </dependency>
		<!-- For XXL-JOB
		<dependency>
		   <groupId>com.github.hiwepy</groupId>
			<artifactId>xxljob-spring-boot-starter</artifactId>
		</dependency>-->
		<!-- For Resilience4j -->
		<dependency>
		    <groupId>io.github.resilience4j</groupId>
		    <artifactId>resilience4j-spring-boot2</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.resilience4j</groupId>
		    <artifactId>resilience4j-reactor</artifactId>
		</dependency>
	    <!-- For Aliyun SMS
		<dependency>
		    <groupId>com.alibaba.cloud</groupId>
        	<artifactId>aliyun-sms-spring-boot-starter</artifactId>
		</dependency> -->
		<!-- For Aliyun ONS
        <dependency>
            <groupId>com.github.hiwepy</groupId>
            <artifactId>aliyun-ons-spring-boot-starter</artifactId>
        </dependency> -->
       <!-- For TenCent API
        <dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>tencentapi-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.tencentcloudapi</groupId>
		    <artifactId>tencentcloud-sdk-java</artifactId>
		</dependency> -->
		<!-- For RocketMQ
		<dependency>
	        <groupId>org.apache.rocketmq</groupId>
	        <artifactId>rocketmq-spring-boot-starter</artifactId>
	    </dependency> -->
		<!-- For Dubbo
		<dependency>
           	<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
		    <groupId>org.apache.dubbo</groupId>
		    <artifactId>dubbo-spring-boot-actuator</artifactId>
		</dependency> -->

		<!-- For Javamelody -->
		<dependency>
		    <groupId>net.bull.javamelody</groupId>
		    <artifactId>javamelody-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Mybatis Plus Generator -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-generator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
		</dependency>
		<!-- For Druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>druid-plus-spring-boot-starter</artifactId>
		</dependency>
		<!-- For Druid
		<dependency>
		    <groupId>de.codecentric</groupId>
		    <artifactId>spring-boot-admin-starter-server</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
		</dependency> -->
		<!-- For Flyway -->
		<dependency>
			<groupId>com.github.hiwepy</groupId>
			<artifactId>flyway-plus-spring-boot-starter</artifactId>
		</dependency>
		<!-- JDBC Driver For MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- JDBC Driver For Oracle -->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc8</artifactId>
		    <scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
	        <artifactId>ojdbc8dms</artifactId>
	        <scope>runtime</scope>
	    </dependency>
		<dependency>
		    <groupId>com.oracle.database.nls</groupId>
		    <artifactId>orai18n</artifactId>
		    <scope>runtime</scope>
		</dependency>

		<!-- For Embed Tomcat -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency> -->
        <!-- For Embed Jetty -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency> -->
        <!-- For Embed Undertow -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<mainClass>net.jeebiz.admin.shadow.JeebizShadowApplication</mainClass>
				</configuration>
			</plugin>
			<!-- 第一步：生成可执行的启动脚本 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
			</plugin>
			<!-- 第一步：通过antrun插件拷贝文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<!-- 第三步：生成离线文档 -->
			<!-- http://blog.didispace.com/swagger2markup-asciidoc/ -->
			<!-- First, use the swagger2markup plugin to generate asciidoc -->
			<!-- <plugin> <groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-maven-plugin</artifactId>
				</plugin> -->
			<!-- Run the generated asciidoc through Asciidoctor to generate other
				documentation types, such as PDFs or HTML5 -->
			<!-- <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId>
				</plugin> -->
		</plugins>
	</build>

</project>
