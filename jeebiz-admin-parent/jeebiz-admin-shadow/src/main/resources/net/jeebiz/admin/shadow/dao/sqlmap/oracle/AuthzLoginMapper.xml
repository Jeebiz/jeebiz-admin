<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jeebiz.admin.shadow.dao.IAuthzLoginDao">

	<resultMap id="LoginMap" type="AuthzLoginModel">
		<!-- 用户ID -->
		<result property="id" column="U_ID" />
		<!-- 用户唯一UID（用户编号） -->
		<result property="uid" column="U_UID" />
		<!-- 用户唯一编号（内部工号） -->
		<result property="ucode" column="U_CODE" />
		<!-- 用户名称 -->
        <result property="username" column="U_USERNAME"/>
        <!-- 用户密码 -->
        <result property="password" column="U_PASSWORD"/>
        <!-- 用户密码盐：用于密码加解密 -->
        <result property="salt" column="U_SALT"/>
        <!-- 用户秘钥：用于用户JWT加解密 -->
        <result property="secret" column="U_SECRET"/>
        <!-- 用户状态(0:不可用|1:正常|2:锁定) -->
        <result property="status" column="U_STATUS"/>
        <!-- 初始化时间 -->
        <result property="time24" column="U_TIME24"/>
        <!-- 角色ID（可能多个组合，如：1,2） -->
		<result property="roleId" column="R_ID" />
		<!-- 角色名称（可能多个组合，如：角色1,角色2） -->
		<result property="roleName" column="R_NAME" />
		<!-- 角色信息 -->
		<collection property="roleList" column="{uid=U_ID}" select="getRoleList"></collection>
	</resultMap>
	
	<resultMap id="RoleMap" type="AuthzRoleModel">
		<!-- 角色ID -->
		<result property="id" column="R_ID" />
		<!-- 角色编码 -->
		<result property="key" column="R_KEY" />
		<!-- 角色名称 -->
		<result property="name" column="R_NAME" />
		<!-- 角色类型（1:原生|2:继承|3:复制|4:自定义） -->
		<result property="type" column="R_TYPE" />
		<!-- 角色简介 -->
		<result property="intro" column="R_INTRO" />
		<!-- 角色状态（0:禁用|1:可用） -->
		<result property="status" column="R_STATUS" />
		<!-- 角色已分配用户量 -->
		<result property="users" column="R_USERS" />
		<!-- 初始化时间 -->
		<result property="time24" column="R_TIME24" />
	</resultMap>
	
	<resultMap id="LoginStatusMap" type="AuthzLoginStatusModel">
		<result property="ucount" column="U_COUNT" />
		<result property="pcount" column="P_COUNT" />
		<result property="rcount" column="R_COUNT" />
		<result property="status" column="U_STATUS" />
		<result property="salt" column="U_SALT" />
	</resultMap>
	
	<resultMap id="ProfileMap" type="net.jeebiz.boot.api.dao.entities.BaseMap">
		<!-- 用户唯一UID（用户编号） -->
		<result property="uid" column="U_UID" />
		<!-- 用户唯一编号（内部工号） -->
		<result property="ucode" column="U_CODE" />
        <!-- 用户客户端应用ID -->
        <result property="appId" column="U_APP_ID"/>
        <!-- 用户客户端应用渠道编码  -->
		<result property="appChannel" column="U_APP_CHANNEL" />
        <!-- 用户客户端版本 -->
        <result property="appVer" column="U_APP_VERSION"/>
        <!-- 用户是否在线（1：是，0：否） -->
        <result property="online" column="U_ONLINE"/>
        <!-- 用户最近一次登录时间 -->
        <result property="onlineLatest" column="U_LATEST_ONLINE" />
	</resultMap>
	
    <select id="getAccountStatus" parameterType="string" resultMap="LoginStatusMap" useCache="false">
	    select (select count('1') from SYS_AUTHZ_USER_LIST a where a.U_USERNAME = #{username}) U_COUNT,
		       (select count('1') from SYS_AUTHZ_USER_LIST b where b.U_USERNAME = #{username} and b.U_PASSWORD = #{password,jdbcType=VARCHAR} ) P_COUNT,
		       (select count('1') from SYS_AUTHZ_USER_LIST c, SYS_AUTHZ_USER_ROLE_RELATION x where c.U_ID = x.U_ID and c.U_USERNAME = #{username}) R_COUNT,
		       NVL((select NVL(d.U_STATUS,'0') from SYS_AUTHZ_USER_LIST d where d.U_USERNAME = #{username}),'0') U_STATUS,
		       (select d.U_SALT from SYS_AUTHZ_USER_LIST d where d.U_USERNAME = #{username}) as U_SALT
		from dual
    </select>

    <select id="getAccountStatusWithoutPwd" parameterType="string" resultMap="LoginStatusMap" useCache="false">
	    select (select count('1') from SYS_AUTHZ_USER_LIST a where a.U_USERNAME = #{username}) U_COUNT,
		       (select count('1') from SYS_AUTHZ_USER_LIST c, SYS_AUTHZ_USER_ROLE_RELATION x where c.U_ID = x.U_ID and c.U_USERNAME = #{username}) R_COUNT,
		       NVL((select NVL(d.U_STATUS,'0') from SYS_AUTHZ_USER_LIST d where d.U_USERNAME = #{username}),'0') U_STATUS,
		       (select d.U_SALT from SYS_AUTHZ_USER_LIST d where d.U_USERNAME = #{username}) as U_SALT
		from dual
    </select>
    
    <select id="getAccountStatusByUid" parameterType="string" resultMap="LoginStatusMap" useCache="false">
	    select (select count('1') from SYS_AUTHZ_USER_LIST a where a.U_ID = #{uid}) U_COUNT,
		       (select count('1') from SYS_AUTHZ_USER_LIST c,SYS_AUTHZ_USER_ROLE_RELATION x where c.U_ID = x.U_ID and c.U_ID = #{uid}) R_COUNT,
		       NVL((select NVL(d.U_STATUS,'0') from SYS_AUTHZ_USER_LIST d where d.U_ID = #{uid}),'0') U_STATUS,
		       (select d.U_SALT from SYS_AUTHZ_USER_LIST d where d.U_ID = #{uid}) as U_SALT
		from dual
    </select>
    
    <sql id="AccountSQL">
		 select t.U_ID,
				t.U_UID,
				t.U_CODE,
				t.U_USERNAME,
				t.U_PASSWORD,
				t.U_SALT,
				t.U_SECRET,
				t.U_STATUS,
				t.U_TIME24
		   from SYS_AUTHZ_USER_LIST t
		  where t.U_USERNAME = #{username}
	</sql>

    <!-- 根据用户ID和密码查询用户信息  -->
    <select id="getAccount" parameterType="string" resultMap="LoginMap" useCache="false">
        <include refid="AccountSQL"/>
        and t.U_PASSWORD = #{password}
    </select>

    <!-- 无密码根据用户ID用户信息  -->
    <select id="getAccountWithoutPwd" parameterType="string" resultMap="LoginMap" useCache="false">
        <include refid="AccountSQL"/>
    </select>

	<select id="getAccountById" parameterType="string" resultMap="LoginMap" useCache="false">
         select t.U_ID,
				t.U_UID,
				t.U_CODE,
				t.U_USERNAME,
				t.U_PASSWORD,
				t.U_SALT,
				t.U_SECRET,
				t.U_STATUS,
				t.U_TIME24
		  from SYS_AUTHZ_USER_LIST t
		 where t.U_ID = #{id}
    </select>
    
    <select id="getAccountByUcode" parameterType="string" resultMap="LoginMap" useCache="false">
         select t.U_ID,
				t.U_UID,
				t.U_CODE,
				t.U_USERNAME,
				t.U_PASSWORD,
				t.U_SALT,
				t.U_SECRET,
				t.U_STATUS,
				t.U_TIME24
		  from SYS_AUTHZ_USER_LIST t
		 where t.U_CODE = #{ucode}
    </select>
	
    <select id="getAccountByUid" parameterType="string" resultMap="LoginMap" useCache="false">
         select t.U_ID,
				t.U_UID,
				t.U_CODE,
				t.U_USERNAME,
				t.U_PASSWORD,
				t.U_SALT,
				t.U_SECRET,
				t.U_STATUS,
				t.U_TIME24
		   from SYS_AUTHZ_USER_LIST t
		  where t.U_UID = #{uid}
    </select>
    
    <select id="getAccountProfile" parameterType="string" resultMap="ProfileMap">
	    SELECT
			t.U_ID,
			t.U_UID,
			t.U_CODE,
			t.U_APP_ID,
			t.U_APP_CHANNEL,
			t.U_APP_VERSION,
			t.U_ONLINE,
			t.U_LATEST_ONLINE
		FROM SYS_AUTHZ_USER_LIST t
	   WHERE t.U_ID = #{userid}
    </select> 

</mapper>